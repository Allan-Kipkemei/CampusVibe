{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { FontAwesome5, MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FFModal = function FFModal(_ref) {\n  var activeTab = _ref.activeTab,\n    username = _ref.username,\n    profileImage = _ref.profileImage,\n    showModal = _ref.showModal,\n    hideModal = _ref.hideModal;\n  var navigation = useNavigation();\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n  var slideAnim = React.useRef(new Animated.Value(width)).current;\n  var _useState = useState(activeTab),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentTab = _useState2[0],\n    setCurrentTab = _useState2[1];\n  var handleTabPress = function handleTabPress(tabKey) {\n    setCurrentTab(tabKey);\n  };\n  React.useEffect(function () {\n    if (showModal) {\n      Animated.timing(slideAnim, {\n        toValue: 0,\n        duration: 100,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(slideAnim, {\n        toValue: width,\n        duration: 100,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [showModal, slideAnim, width]);\n  return _jsx(View, {\n    children: _jsx(Modal, {\n      animationType: \"none\",\n      transparent: true,\n      visible: showModal,\n      onRequestClose: hideModal,\n      children: _jsxs(Animated.View, {\n        style: [styles.modal, {\n          transform: [{\n            translateX: slideAnim\n          }]\n        }],\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Image, {\n            style: styles.profileImage,\n            source: profileImage\n          }), _jsx(Text, {\n            style: styles.sett,\n            children: username\n          }), _jsx(TouchableOpacity, {\n            onPress: hideModal,\n            style: styles.back,\n            children: _jsx(MaterialIcons, {\n              name: \"cancel\",\n              size: 24,\n              color: \"#404040\"\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.body,\n          children: _jsxs(View, {\n            style: styles.tabContainer,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.tabItem, currentTab === 'following' && styles.activeTab],\n              onPress: function onPress() {\n                return handleTabPress('following');\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Following\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.tabItem, currentTab === 'followers' && styles.activeTab],\n              onPress: function onPress() {\n                return handleTabPress('followers');\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Followers\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.tabItem, currentTab === 'suggestions' && styles.activeTab],\n              onPress: function onPress() {\n                return handleTabPress('suggestions');\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Suggestions\"\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  modal: {\n    backgroundColor: '#ffff',\n    width: '100%',\n    height: '100%'\n  },\n  header: {\n    backgroundColor: 'white',\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    justifyContent: 'space-between'\n  },\n  sett: {\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  tabContainer: {\n    marginBottom: 2,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0'\n  },\n  tabItem: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  activeTab: {\n    borderBottomColor: '#2696b8',\n    borderBottomWidth: 2\n  },\n  tabText: {\n    color: 'black'\n  },\n  profileImage: {\n    width: 30,\n    height: 30,\n    borderRadius: 100\n  },\n  text: {\n    fontSize: 13,\n    color: '#404040'\n  }\n});\nexport default FFModal;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Modal","TouchableOpacity","StyleSheet","Animated","Dimensions","Image","useNavigation","FontAwesome5","MaterialIcons","jsx","_jsx","jsxs","_jsxs","FFModal","_ref","activeTab","username","profileImage","showModal","hideModal","navigation","_Dimensions$get","get","width","slideAnim","useRef","Value","current","_useState","_useState2","_slicedToArray","currentTab","setCurrentTab","handleTabPress","tabKey","timing","toValue","duration","useNativeDriver","start","children","animationType","transparent","visible","onRequestClose","style","styles","modal","transform","translateX","header","source","sett","onPress","back","name","size","color","body","tabContainer","tabItem","text","create","backgroundColor","height","flexDirection","alignItems","paddingHorizontal","justifyContent","fontSize","fontWeight","marginBottom","borderBottomWidth","borderBottomColor","flex","paddingBottom","tabText","borderRadius"],"sources":["/home/leo/Documents/Campus-Vibes-V1/mobile/screens/FFView.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { View, Text, Modal, TouchableOpacity, StyleSheet, Animated, Dimensions, Image} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { FontAwesome5, MaterialIcons} from '@expo/vector-icons';\n\nconst FFModal = ({ activeTab, username,profileImage, showModal, hideModal }) => {\n    const navigation = useNavigation();\n    const { width } = Dimensions.get('window');\n    const slideAnim = React.useRef(new Animated.Value(width)).current;\n    const [currentTab, setCurrentTab] = useState(activeTab);\n  \n    const handleTabPress = (tabKey) => {\n      setCurrentTab(tabKey);\n    };\n  \n    React.useEffect(() => {\n      if (showModal) {\n        Animated.timing(slideAnim, { toValue: 0, duration: 100, useNativeDriver: true }).start();\n      } else {\n        Animated.timing(slideAnim, { toValue: width, duration: 100, useNativeDriver: true }).start();\n      }\n    }, [showModal, slideAnim, width]);\n  \n    return (\n      <View>\n        <Modal animationType=\"none\" transparent={true} visible={showModal} onRequestClose={hideModal}>\n          <Animated.View style={[styles.modal, { transform: [{ translateX: slideAnim }] }]}>\n            <View style={styles.header}>\n              <Image style={styles.profileImage} source={profileImage}/>\n              <Text style={styles.sett}>{username}</Text>\n              <TouchableOpacity onPress={hideModal} style={styles.back}>\n                 <MaterialIcons name=\"cancel\" size={24} color=\"#404040\" />\n              </TouchableOpacity>\n            </View>\n            {/* Body */}\n  \n            <View style={styles.body}>\n              <View style={styles.tabContainer}>\n                <TouchableOpacity\n                  style={[styles.tabItem, currentTab === 'following' && styles.activeTab]}\n                  onPress={() => handleTabPress('following')}\n                >\n                  <Text style={styles.text}>Following</Text>\n                </TouchableOpacity>\n  \n                <TouchableOpacity\n                  style={[styles.tabItem, currentTab === 'followers' && styles.activeTab]}\n                  onPress={() => handleTabPress('followers')}\n                >\n                  <Text style={styles.text}>Followers</Text>\n                </TouchableOpacity>\n  \n                <TouchableOpacity\n                  style={[styles.tabItem, currentTab === 'suggestions' && styles.activeTab]}\n                  onPress={() => handleTabPress('suggestions')}\n                >\n                  <Text style={styles.text}>Suggestions</Text>\n                </TouchableOpacity>\n              </View>\n  \n              {/* {currentTab === 'following' && 'add component here'}\n              {currentTab === 'followers' && 'add component here'}\n              {currentTab === 'suggestions' && 'add component here'} */}\n            </View>\n          </Animated.View>\n        </Modal>\n      </View>\n    );\n  };\n  \n  \n\nconst styles = StyleSheet.create({\n  modal: {\n    backgroundColor: '#ffff',\n    width: '100%', height: '100%'\n  },\n  header:{\n    backgroundColor: 'white',\n    height: 60, flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    justifyContent: 'space-between'\n  },\n  sett:{\n     fontSize: 18,\n     fontWeight: '500'\n  },\n  tabContainer: {\n    marginBottom: 2,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 1, borderBottomColor: '#f0f0f0'\n  },\n  tabItem: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5,\n  },\n  activeTab: {\n    borderBottomColor: '#2696b8',\n    borderBottomWidth: 2\n  },\n  tabText: {\n    color: 'black',\n  },\n  profileImage:{\n    width: 30, height: 30, borderRadius: 100,\n  },\n  text:{\n    fontSize: 13,\n    color: '#404040'\n  }\n \n});\n\nexport default FFModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}