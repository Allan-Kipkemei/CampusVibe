{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar audienceOptions = [{\n  label: 'Everyone',\n  value: 'all',\n  icon: 'globe'\n}, {\n  label: 'Campus',\n  value: 'campus',\n  icon: 'school'\n}, {\n  label: 'Faculty',\n  value: 'faculty',\n  icon: 'graduation-cap'\n}];\nvar AudiencePicker = function AudiencePicker(_ref) {\n  var audience = _ref.audience,\n    setAudience = _ref.setAudience,\n    campus = _ref.campus,\n    isPickerOpen = _ref.isPickerOpen,\n    setPickerOpen = _ref.setPickerOpen;\n  var closeModal = function closeModal() {\n    setPickerOpen(false);\n  };\n  return _jsx(Modal, {\n    visible: isPickerOpen,\n    transparent: true,\n    animationType: \"slide\",\n    onRequestClose: closeModal,\n    children: _jsx(TouchableOpacity, {\n      style: styles.modalContainer,\n      activeOpacity: 1,\n      onPress: closeModal,\n      children: _jsx(View, {\n        style: styles.audiencePicker,\n        children: audienceOptions.map(function (option) {\n          return _jsxs(TouchableOpacity, {\n            style: [styles.audienceButton, audience === option.label && styles.selectedAudienceButton],\n            onPress: function onPress() {\n              setAudience(option.label);\n              setPickerOpen(false);\n            },\n            children: [_jsx(FontAwesome5, {\n              name: option.icon,\n              size: 20,\n              color: \"#000\"\n            }), _jsx(Text, {\n              style: [styles.audienceButtonText, audience === option.label && styles.selectedAudienceButtonText],\n              children: option.label\n            })]\n          }, option.label);\n        })\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'flex-end'\n  },\n  audiencePicker: {\n    backgroundColor: '#fff',\n    padding: 20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20\n  },\n  audienceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    marginBottom: 10,\n    borderRadius: 10\n  },\n  selectedAudienceButton: {\n    backgroundColor: '#2696b8'\n  },\n  audienceButtonText: {\n    marginLeft: 10,\n    color: '#000',\n    fontSize: 16\n  },\n  selectedAudienceButtonText: {\n    color: '#fff'\n  }\n});\nexport default AudiencePicker;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","StyleSheet","Modal","FontAwesome5","jsx","_jsx","jsxs","_jsxs","audienceOptions","label","value","icon","AudiencePicker","_ref","audience","setAudience","campus","isPickerOpen","setPickerOpen","closeModal","visible","transparent","animationType","onRequestClose","children","style","styles","modalContainer","activeOpacity","onPress","audiencePicker","map","option","audienceButton","selectedAudienceButton","name","size","color","audienceButtonText","selectedAudienceButtonText","create","flex","backgroundColor","justifyContent","padding","borderTopLeftRadius","borderTopRightRadius","flexDirection","alignItems","paddingVertical","marginBottom","borderRadius","marginLeft","fontSize"],"sources":["C:/Users/Alus/Downloads/Campus-Vibes-V1-main/Campus-Vibes-V1-main/mobile/components/AudiencePicker.js"],"sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, Modal } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nconst audienceOptions = [\n  { label: 'Everyone', value: 'all', icon: 'globe' },\n  { label: 'Campus', value: 'campus', icon: 'school' },\n  { label: 'Faculty', value: 'faculty', icon: 'graduation-cap' },\n];\n\nconst AudiencePicker = ({ audience, setAudience, campus, isPickerOpen, setPickerOpen }) => {\n    const closeModal = () => {\n      setPickerOpen(false);\n    };\n  \n    return (\n      <Modal\n        visible={isPickerOpen}\n        transparent\n        animationType=\"slide\"\n        onRequestClose={closeModal}\n      >\n        <TouchableOpacity style={styles.modalContainer} activeOpacity={1} onPress={closeModal}>\n          <View style={styles.audiencePicker}>\n            {audienceOptions.map((option) => (\n              <TouchableOpacity\n                key={option.label}\n                style={[styles.audienceButton, audience === option.label && styles.selectedAudienceButton]}\n                onPress={() => {\n                  setAudience(option.label);\n                  setPickerOpen(false);\n                }}\n              >\n                <FontAwesome5 name={option.icon} size={20} color=\"#000\" />\n                <Text\n                  style={[styles.audienceButtonText, audience === option.label && styles.selectedAudienceButtonText]}\n                 >\n                  {option.label}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </TouchableOpacity>\n      </Modal>\n    );\n  };\n  \n  const styles = StyleSheet.create({\n    modalContainer: {\n      flex: 1,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      justifyContent: 'flex-end',\n    },\n    audiencePicker: {\n      backgroundColor: '#fff',\n      padding: 20,\n      borderTopLeftRadius: 20,\n      borderTopRightRadius: 20,\n    },\n    audienceButton: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingVertical: 10,\n      marginBottom: 10,\n      borderRadius: 10,\n    },\n    selectedAudienceButton: {\n      backgroundColor: '#2696b8',\n    },\n    audienceButtonText: {\n      marginLeft: 10,\n      color: '#000',\n      fontSize: 16,\n    },\n    selectedAudienceButtonText: {\n      color: '#fff',\n    },\n  });\n  \n  export default AudiencePicker;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}