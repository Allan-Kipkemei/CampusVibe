{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar MyCourse = function MyCourse(_ref) {\n  var field = _ref.field;\n  var slideAnim = useRef(new Animated.Value(width)).current;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  useEffect(function () {\n    if (modalVisible) {\n      Animated.timing(slideAnim, {\n        toValue: 0,\n        duration: 100,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(slideAnim, {\n        toValue: width,\n        duration: 100,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [modalVisible]);\n  var hideModal = function hideModal() {\n    setModalVisible(false);\n  };\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      style: styles.course,\n      children: _jsx(Text, {\n        style: styles.field,\n        children: field.length > 10 ? field.substring(0, 20) + \"...\" : field\n      })\n    }), _jsx(Modal, {\n      animationType: \"none\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: hideModal,\n      children: _jsxs(Animated.View, {\n        style: [styles.modal, {\n          transform: [{\n            translateX: slideAnim\n          }]\n        }],\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(TouchableOpacity, {\n            onPress: hideModal,\n            style: styles.back,\n            children: _jsx(MaterialIcons, {\n              name: \"arrow-back\",\n              size: 25,\n              color: \"#000\"\n            })\n          }), _jsx(Text, {\n            style: styles.sett,\n            children: field\n          })]\n        }), _jsx(View, {\n          style: styles.body\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  modal: {\n    backgroundColor: 'white',\n    height: height,\n    width: width\n  },\n  header: {\n    flexDirection: 'row',\n    padding: 10,\n    alignItems: 'center'\n  },\n  back: {\n    marginHorizontal: 5\n  },\n  sett: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginHorizontal: 5\n  },\n  body: {\n    position: 'absolute',\n    top: 62,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'white'\n  },\n  course: {\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    backgroundColor: '#f6f6f6',\n    borderRadius: 10,\n    alignItems: 'center'\n  }\n});\nexport default MyCourse;","map":{"version":3,"names":["React","useEffect","useRef","useState","View","Text","Modal","TouchableOpacity","Animated","Dimensions","StyleSheet","MaterialIcons","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","MyCourse","_ref","field","slideAnim","Value","current","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","timing","toValue","duration","useNativeDriver","start","hideModal","children","onPress","style","styles","course","length","substring","animationType","transparent","visible","onRequestClose","modal","transform","translateX","header","back","name","size","color","sett","body","create","backgroundColor","flexDirection","padding","alignItems","marginHorizontal","fontSize","fontWeight","position","top","left","right","bottom","paddingVertical","paddingHorizontal","borderRadius"],"sources":["C:/Users/Alus/Downloads/Campus-Vibes-V1-main/Campus-Vibes-V1-main/mobile/components/MyCourse.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { View, Text, Modal, TouchableOpacity, Animated, Dimensions, StyleSheet } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nconst { width, height } = Dimensions.get('window');\n\nconst MyCourse = ({ field}) => {\n  const slideAnim = useRef(new Animated.Value(width)).current;\n   const [modalVisible, setModalVisible] = useState(false)\n  useEffect(() => {\n    if (modalVisible) {\n      Animated.timing(slideAnim, { toValue: 0, duration: 100, useNativeDriver: true }).start();\n    } else {\n      Animated.timing(slideAnim, { toValue: width, duration: 100, useNativeDriver: true }).start();\n    }\n  }, [modalVisible]);\n\n  const hideModal = () =>{\n    setModalVisible(false)\n  }\n\n\n  return (\n    <View>\n      <TouchableOpacity onPress={()=> setModalVisible(true)} style={styles.course}>\n        <Text style={styles.field}>\n        {field.length > 10 ? `${field.substring(0, 20)}...` : field}\n        </Text>\n      </TouchableOpacity>\n       <Modal animationType=\"none\" transparent={true} visible={modalVisible} onRequestClose={hideModal}> \n          <Animated.View style={[styles.modal, { transform: [{ translateX: slideAnim }] }]}>\n\n          <View style={styles.header}>   \n             <TouchableOpacity onPress={hideModal}  style={styles.back}>\n                 <MaterialIcons name=\"arrow-back\" size={25} color=\"#000\" />\n              </TouchableOpacity>\n              <Text style={styles.sett}>{field}</Text>\n           </View>\n            {/* Body */}\n            <View style={styles.body}>\n  \n            </View>\n  \n          </Animated.View>\n        </Modal>\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  modal: {\n    backgroundColor: 'white',\n    height: height, width: width\n  },\n  header:{\n    flexDirection: 'row', \n    padding:10, alignItems: 'center'\n  },\n  back: {\n    marginHorizontal:5\n  },\n  sett:{\n     fontSize: 18,\n     fontWeight: '600',\n     marginHorizontal:5\n  },\nbody:{\n    position: 'absolute',\n    top: 62, \n    left:0, right: 0,bottom: 0,\n    backgroundColor: 'white'\n  },\n    course:{\n    paddingVertical: 10, paddingHorizontal: 10,\n    backgroundColor: '#f6f6f6', \n    // borderWidth: 1, borderColor: '#c0c0c0',\n    borderRadius: 10, alignItems: 'center'\n  },\n});\n\nexport default MyCourse;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}