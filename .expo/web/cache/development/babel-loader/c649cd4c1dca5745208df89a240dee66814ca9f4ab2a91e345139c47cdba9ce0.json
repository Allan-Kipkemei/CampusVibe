{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport PostTab from \"../components/LikeTab\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ImageView = function ImageView(_ref) {\n  var image = _ref.image,\n    topic = _ref.topic,\n    topicTag = _ref.topicTag,\n    message = _ref.message,\n    postId = _ref.postId;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n  var slideAnim = useRef(new Animated.Value(width)).current;\n  var showModal = function showModal() {\n    setModalVisible(true);\n    Animated.timing(slideAnim, {\n      toValue: 0,\n      duration: 100,\n      useNativeDriver: true\n    }).start();\n  };\n  var hideModal = function hideModal() {\n    Animated.timing(slideAnim, {\n      toValue: width,\n      duration: 100,\n      useNativeDriver: true\n    }).start(function () {\n      return setModalVisible(false);\n    });\n  };\n  var trimTopic = function trimTopic(topic) {\n    if (topic.length > 20) {\n      return topic.substring(0, 20) + \"...\";\n    } else {\n      return topic;\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(StatusBar, {\n      barStyle: 'light-content',\n      backgroundColor: 'black'\n    }), _jsx(TouchableOpacity, {\n      onPress: showModal,\n      children: _jsx(Image, {\n        style: styles.photo,\n        source: {\n          uri: image\n        }\n      })\n    }), _jsx(Modal, {\n      animationType: \"none\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: hideModal,\n      children: _jsxs(Animated.View, {\n        style: [styles.modal, {\n          transform: [{\n            translateX: slideAnim\n          }]\n        }],\n        children: [_jsx(View, {\n          style: styles.header,\n          children: _jsx(TouchableOpacity, {\n            onPress: hideModal,\n            style: styles.back,\n            children: _jsx(MaterialIcons, {\n              name: \"arrow-back\",\n              size: 25,\n              color: \"white\"\n            })\n          })\n        }), _jsx(View, {\n          style: styles.body,\n          children: _jsx(Image, {\n            resizeMode: \"contain\",\n            style: styles.fullscreenImage,\n            source: {\n              uri: image\n            }\n          })\n        }), _jsxs(View, {\n          style: styles.likes,\n          children: [_jsx(Text, {\n            style: styles.message,\n            children: message\n          }), _jsx(PostTab, {\n            postId: postId\n          })]\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  modal: {\n    left: 0,\n    top: 0,\n    bottom: 0,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    backgroundColor: '#f8f8f8',\n    padding: 20,\n    position: 'absolute',\n    right: 0\n  },\n  body: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#0a0a0a'\n  },\n  photo: {\n    width: '100%',\n    height: 250,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: '#f0f0f0',\n    alignSelf: 'center'\n  },\n  fullscreenImage: {\n    width: \"100%\",\n    height: \"100%\",\n    bottom: 50,\n    top: 0\n  },\n  back: {},\n  topic: {\n    marginLeft: 10,\n    fontWeight: '600',\n    fontSize: 18,\n    color: 'white'\n  },\n  header: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    zIndex: 2,\n    flexDirection: 'row',\n    padding: 20,\n    right: 0\n  },\n  message: {\n    color: 'white'\n  },\n  likes: {\n    backgroundColor: 'rgba(0,0,0, 0.5)',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 20,\n    paddingBottom: 20\n  }\n});\nexport default ImageView;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","View","Text","Modal","TouchableOpacity","Image","StyleSheet","Animated","Dimensions","StatusBar","MaterialIcons","FontAwesome5","PostTab","jsx","_jsx","jsxs","_jsxs","ImageView","_ref","image","topic","topicTag","message","postId","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_Dimensions$get","get","width","height","slideAnim","Value","current","showModal","timing","toValue","duration","useNativeDriver","start","hideModal","trimTopic","length","substring","children","barStyle","backgroundColor","onPress","style","styles","photo","source","uri","animationType","transparent","visible","onRequestClose","modal","transform","translateX","header","back","name","size","color","body","resizeMode","fullscreenImage","likes","create","left","top","bottom","flex","alignSelf","alignItems","padding","position","right","borderRadius","borderWidth","borderColor","marginLeft","fontWeight","fontSize","zIndex","flexDirection","paddingHorizontal","paddingBottom"],"sources":["C:/Users/muguc/OneDrive/Desktop/Campus Vibes/mobile/screens/ImageModal.js"],"sourcesContent":["import React, { useState, useEffect,useCallback, useRef} from 'react';\r\nimport { View, Text, Modal, TouchableOpacity, Image, StyleSheet, Animated, Dimensions, StatusBar} from 'react-native';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport PostTab from '../components/LikeTab';\r\n\r\nconst ImageView = ({ image, topic,topicTag, message, postId}) => {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const { width, height } = Dimensions.get('window');\r\n    const slideAnim = useRef(new Animated.Value(width)).current;\r\n  \r\n    const showModal = () => {\r\n      setModalVisible(true);\r\n      Animated.timing(slideAnim, {\r\n        toValue: 0,\r\n        duration: 100,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    };\r\n  \r\n    const hideModal = () => {\r\n      Animated.timing(slideAnim, {\r\n        toValue: width,\r\n        duration: 100,\r\n        useNativeDriver: true,\r\n      }).start(() => setModalVisible(false));\r\n    };\r\n\r\n    // Trim topic\r\n    const trimTopic = (topic) => {\r\n        if (topic.length > 20) {\r\n          return topic.substring(0, 20) + \"...\" ;\r\n        } else {\r\n          return topic;\r\n        }\r\n      };\r\n      \r\n    return (\r\n      <View>\r\n        <StatusBar barStyle={'light-content'} backgroundColor={'black'}/>\r\n        <TouchableOpacity onPress={showModal}>\r\n          <Image style={styles.photo} source={{ uri: image }} />\r\n        </TouchableOpacity>\r\n        <Modal\r\n          animationType=\"none\"\r\n          transparent={true}\r\n          visible={modalVisible}\r\n          onRequestClose={hideModal}\r\n        >\r\n          <Animated.View\r\n            style={[\r\n              styles.modal,\r\n              { transform: [{ translateX: slideAnim }] },\r\n            ]}\r\n          >\r\n            <View style={styles.header}>\r\n                 <TouchableOpacity onPress={hideModal} style={styles.back}>\r\n                     <MaterialIcons name=\"arrow-back\" size={25} color=\"white\" />\r\n                  </TouchableOpacity>\r\n                  {/* <Text style={styles.topic}>\r\n                     <FontAwesome5 name={topicTag} size={20} color=\"orange\" /> \r\n                     {trimTopic(topic)}\r\n                 </Text> */}\r\n            </View>\r\n             \r\n            <View style={styles.body}>\r\n               \r\n              <Image\r\n                resizeMode=\"contain\"\r\n                style={styles.fullscreenImage}\r\n                source={{ uri: image }}\r\n              />\r\n                \r\n             </View>\r\n             <View style={styles.likes}>\r\n             <Text style={styles.message}>{message}</Text>\r\n                <PostTab postId={postId}/>\r\n             </View>\r\n          </Animated.View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  };\r\n  \r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    left:0, top: 0, bottom: 0, flex: 1,\r\n    alignSelf: 'center', alignItems: 'flex-end',\r\n    backgroundColor: '#f8f8f8',\r\n    padding: 20,\r\n    position: 'absolute',\r\n     right:0,\r\n  },\r\n  body:{\r\n    position: 'absolute',\r\n    top: 0, \r\n    left:0, right: 0,bottom: 0,\r\n    backgroundColor: '#0a0a0a'\r\n\r\n  },\r\n  photo:{\r\n    width: '100%', height:250,\r\n    borderRadius:15, borderWidth: 1, borderColor: '#f0f0f0',\r\n    alignSelf: 'center'\r\n  },\r\n  fullscreenImage:{\r\n    width: \"100%\", height: \"100%\",\r\n    bottom: 50, top: 0\r\n  },\r\nback:{\r\n     \r\n}, \r\ntopic:{\r\n     marginLeft: 10, fontWeight: '600', fontSize: 18,\r\n     color:'white'\r\n},\r\nheader:{\r\n    position:'absolute', left:0, top: 0, zIndex: 2,\r\n    flexDirection: 'row',\r\n    // backgroundColor: 'rgb(0,0,0)',\r\n    padding: 20,right: 0\r\n\r\n},\r\nmessage:{\r\n    color: 'white', \r\n    \r\n}, \r\nlikes:{\r\n  backgroundColor: 'rgba(0,0,0, 0.5)',\r\n    position: 'absolute',\r\n    bottom:0,\r\n    left: 0, right: 0, paddingHorizontal: 20,\r\n    paddingBottom: 20\r\n   \r\n}\r\n\r\n \r\n});\r\n\r\nexport default ImageView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}