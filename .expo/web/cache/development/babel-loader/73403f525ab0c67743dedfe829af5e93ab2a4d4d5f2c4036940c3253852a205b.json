{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport VirtualizedList from \"react-native-web/dist/exports/VirtualizedList\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Topnav from \"../components/Topnav\";\nimport Snippet from \"../components/snippet\";\nimport { useNavigation } from '@react-navigation/native';\nimport Search from \"../components/search.js\";\nimport { db } from \"../firebase/firebase\";\nimport { getDocs, collection, orderBy, query, where, startAfter, limit } from 'firebase/firestore';\nimport CampusModal from \"../components/filterTopButton\";\nimport { useSelector } from 'react-redux';\nimport NetworkError from \"../components/NetworkError\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar PAGE_SIZE = 10;\nvar mergePosts = function mergePosts(userFilterPosts, popularPosts, latestPosts) {\n  var mergedPosts = [];\n  var i = 0;\n  while (i < userFilterPosts.length) {\n    mergedPosts.push(userFilterPosts[i]);\n    i++;\n  }\n  i = 0;\n  var j = 0;\n  while (i < popularPosts.length) {\n    if (j < mergedPosts.length) {\n      mergedPosts.splice(j, 0, popularPosts[i]);\n      i++;\n      j += 2;\n    } else {\n      mergedPosts.push(popularPosts[i]);\n      i++;\n      j++;\n    }\n  }\n  i = 0;\n  j = 1;\n  while (i < latestPosts.length) {\n    if (j < mergedPosts.length) {\n      mergedPosts.splice(j, 0, latestPosts[i]);\n      i++;\n      j += 2;\n    } else {\n      mergedPosts.push(latestPosts[i]);\n      i++;\n      j++;\n    }\n  }\n  return mergedPosts;\n};\nvar Feed = function Feed() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastVisiblePost = _useState4[0],\n    setLastVisiblePost = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hasMorePosts = _useState6[0],\n    setHasMorePosts = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errorMessage = _useState8[0],\n    setNetworkError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    refreshing = _useState10[0],\n    setRefreshing = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    loading = _useState12[0],\n    setLoading = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    loadingMore = _useState14[0],\n    setLoadingMore = _useState14[1];\n  var active = useSelector(function (state) {\n    return state.filter.filter;\n  });\n  var fetchedPostIds = useRef(new Set());\n  var scrollY = useRef(new Animated.Value(0)).current;\n  var headerThreshold = 100;\n  var fetchInitialPosts = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        console.log('Fetching initial posts...');\n        var userFilterPostsQuery = query(collection(db, 'Posts'), where('audience', '==', active), orderBy(active === 'popular' ? 'likes' : 'createdAt', 'desc'), limit(PAGE_SIZE));\n        var userFilterSnapshot = yield getDocs(userFilterPostsQuery);\n        var userFilterPostsData = userFilterSnapshot.docs.map(function (doc) {\n          return _objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          });\n        });\n        var popularPostsQuery = query(collection(db, 'Posts'), where('audience', '==', 'popular'), orderBy('likes', 'desc'), orderBy('createdAt', 'desc'), limit(PAGE_SIZE * 0.7));\n        var latestPostsQuery = query(collection(db, 'Posts'), where('audience', '==', 'latest'), orderBy('createdAt', 'desc'), limit(PAGE_SIZE * 0.3));\n        var popularSnapshot = yield getDocs(popularPostsQuery);\n        var latestSnapshot = yield getDocs(latestPostsQuery);\n        var popularPostsData = popularSnapshot.docs.map(function (doc) {\n          return _objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          });\n        });\n        var latestPostsData = latestSnapshot.docs.map(function (doc) {\n          return _objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          });\n        });\n        var mergedPostsData = mergePosts(userFilterPostsData, popularPostsData, latestPostsData);\n        if (mergedPostsData.length === 0) {\n          if (active !== 'all') {\n            setPosts([]);\n            setLastVisiblePost(null);\n            setHasMorePosts(true);\n            fetchedPostIds.current = new Set();\n            fetchMorePosts();\n            return;\n          }\n          var alert = \"Try again later\";\n          setNetworkError(alert);\n          setHasMorePosts(false);\n        } else {\n          setLastVisiblePost(mergedPostsData[mergedPostsData.length - 1]);\n          setHasMorePosts(true);\n        }\n        setPosts(mergedPostsData);\n        mergedPostsData.forEach(function (post) {\n          return fetchedPostIds.current.add(post.id);\n        });\n      } catch (error) {\n        console.error('Firestore Network Error:', error.code, error.message);\n        var _errorMessage = 'Please check your internet connection and try again!';\n        setNetworkError(_errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchInitialPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchMorePosts = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        if (!hasMorePosts) return;\n        setLoadingMore(true);\n        console.log('Fetching more posts...');\n        var userFilterPostsQuery = query(collection(db, 'Posts'), where('audience', '==', active), orderBy(active === 'popular' ? 'likes' : 'createdAt', 'desc'), startAfter(lastVisiblePost), limit(PAGE_SIZE));\n        var userFilterSnapshot = yield getDocs(userFilterPostsQuery);\n        var userFilterPostsData = userFilterSnapshot.docs.map(function (doc) {\n          return _objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          });\n        });\n        var uniquePostsData = userFilterPostsData.filter(function (post) {\n          return !fetchedPostIds.current.has(post.id);\n        });\n        if (uniquePostsData.length === 0) {\n          setHasMorePosts(false);\n        } else {\n          uniquePostsData.forEach(function (post) {\n            return fetchedPostIds.current.add(post.id);\n          });\n          setLastVisiblePost(uniquePostsData[uniquePostsData.length - 1]);\n        }\n        setPosts(function (prevPosts) {\n          return [].concat(_toConsumableArray(prevPosts), _toConsumableArray(uniquePostsData));\n        });\n      } catch (error) {\n        console.error('Firestore Network Error:', error.code, error.message);\n        var _errorMessage2 = 'Please check your internet connection and try again!';\n        setNetworkError(_errorMessage2);\n      } finally {\n        setLoadingMore(false);\n      }\n    });\n    return function fetchMorePosts() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onRefresh = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      yield fetchInitialPosts();\n      setRefreshing(false);\n    });\n    return function onRefresh() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var getItemCount = useCallback(function (data) {\n    return data.length;\n  }, []);\n  var getItem = useCallback(function (data, index) {\n    return data[index];\n  }, []);\n  var renderVirtualizedItem = useCallback(function (_ref4) {\n    var item = _ref4.item;\n    return _jsx(Snippet, {\n      post: item,\n      postId: item.id\n    });\n  }, []);\n  var handleFetchMorePosts = function handleFetchMorePosts() {\n    if (!loadingMore && hasMorePosts) {\n      fetchMorePosts();\n    }\n  };\n  var ListHeaderComponent = function ListHeaderComponent() {\n    return _jsx(Search, {});\n  };\n  var ListFooterComponent = function ListFooterComponent() {\n    if (!hasMorePosts && posts.length > 0) {\n      return _jsx(View, {\n        style: styles.noMorePosts,\n        children: _jsx(Text, {\n          children: \"No more posts. Try changing the feed filter.\"\n        })\n      });\n    }\n    return null;\n  };\n  return _jsxs(View, {\n    style: styles.feed,\n    children: [_jsx(Topnav, {\n      screen: 'feed'\n    }), _jsx(StatusBar, {\n      barStyle: 'dark-content',\n      backgroundColor: '#ffff'\n    }), _jsx(VirtualizedList, {\n      showsVerticalScrollIndicator: false,\n      data: posts,\n      renderItem: renderVirtualizedItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      getItemCount: getItemCount,\n      getItem: getItem,\n      onEndReached: handleFetchMorePosts,\n      onEndReachedThreshold: 0.5,\n      contentContainerStyle: styles.flatListContent,\n      ListHeaderComponent: ListHeaderComponent,\n      ListFooterComponent: ListFooterComponent,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      })\n    }), loadingMore && _jsx(View, {\n      style: styles.loadingMore,\n      children: _jsx(ActivityIndicator, {\n        size: 'large',\n        color: '#2696b8'\n      })\n    }), loading && _jsx(View, {\n      style: styles.loading,\n      children: _jsx(ActivityIndicator, {\n        size: 'small',\n        color: '#2696b8'\n      })\n    }), errorMessage && _jsx(NetworkError, {\n      message: errorMessage\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  feed: {\n    flex: 1\n  },\n  flatListContent: {},\n  loadingMore: {\n    alignSelf: 'center',\n    padding: 5,\n    marginVertical: 2,\n    width: width\n  },\n  loading: {\n    position: 'absolute',\n    top: height / 2 - 20,\n    left: width / 2 - 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  noMorePosts: {\n    alignSelf: 'center',\n    marginVertical: 8\n  }\n});\nexport default Feed;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","View","StyleSheet","Pressable","Image","RefreshControl","VirtualizedList","BackHandler","StatusBar","ActivityIndicator","Dimensions","Text","Animated","Easing","Topnav","Snippet","useNavigation","Search","db","getDocs","collection","orderBy","query","where","startAfter","limit","CampusModal","useSelector","NetworkError","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","PAGE_SIZE","mergePosts","userFilterPosts","popularPosts","latestPosts","mergedPosts","i","length","push","j","splice","Feed","navigation","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","lastVisiblePost","setLastVisiblePost","_useState5","_useState6","hasMorePosts","setHasMorePosts","_useState7","_useState8","errorMessage","setNetworkError","_useState9","_useState10","refreshing","setRefreshing","_useState11","_useState12","loading","setLoading","_useState13","_useState14","loadingMore","setLoadingMore","active","state","filter","fetchedPostIds","Set","scrollY","Value","current","headerThreshold","fetchInitialPosts","_ref","_asyncToGenerator","console","log","userFilterPostsQuery","userFilterSnapshot","userFilterPostsData","docs","map","doc","_objectSpread","data","id","popularPostsQuery","latestPostsQuery","popularSnapshot","latestSnapshot","popularPostsData","latestPostsData","mergedPostsData","fetchMorePosts","alert","forEach","post","add","error","code","message","apply","arguments","_ref2","uniquePostsData","has","prevPosts","concat","_toConsumableArray","onRefresh","_ref3","getItemCount","getItem","index","renderVirtualizedItem","_ref4","item","postId","handleFetchMorePosts","ListHeaderComponent","ListFooterComponent","style","styles","noMorePosts","children","feed","screen","barStyle","backgroundColor","showsVerticalScrollIndicator","renderItem","keyExtractor","onEndReached","onEndReachedThreshold","contentContainerStyle","flatListContent","refreshControl","size","color","create","flex","alignSelf","padding","marginVertical","position","top","left","justifyContent","alignItems"],"sources":["C:/Users/Alus/Downloads/Campus-Vibes-V1-main/Campus-Vibes-V1-main/mobile/screens/Feed.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Pressable,\n  Image,\n  RefreshControl,\n  VirtualizedList,\n  BackHandler,\n  StatusBar,\n  ActivityIndicator,\n  Dimensions,\n  Text,\n  Animated,\n  Easing,\n} from 'react-native';\nimport Topnav from '../components/Topnav';\nimport Snippet from '../components/snippet';\nimport { useNavigation } from '@react-navigation/native';\nimport Search from '../components/search.js';\nimport { db } from '../firebase/firebase';\nimport {\n  getDocs,\n  collection,\n  orderBy,\n  query,\n  where,\n  startAfter,\n  limit,\n} from 'firebase/firestore';\nimport CampusModal from '../components/filterTopButton';\nimport { useSelector } from 'react-redux';\nimport NetworkError from '../components/NetworkError';\n\nconst { width, height } = Dimensions.get('window');\nconst PAGE_SIZE = 10; // Number of posts to fetch in a single query\n\nconst mergePosts = (userFilterPosts, popularPosts, latestPosts) => {\n  // Function to merge user filter posts with 70% popular posts and 30% latest posts\n  const mergedPosts = [];\n\n  // Merge user filter posts\n  let i = 0;\n  while (i < userFilterPosts.length) {\n    mergedPosts.push(userFilterPosts[i]);\n    i++;\n  }\n\n  // Merge 70% popular posts\n  i = 0;\n  let j = 0;\n  while (i < popularPosts.length) {\n    if (j < mergedPosts.length) {\n      mergedPosts.splice(j, 0, popularPosts[i]);\n      i++;\n      j += 2;\n    } else {\n      mergedPosts.push(popularPosts[i]);\n      i++;\n      j++;\n    }\n  }\n\n  // Merge 30% latest posts\n  i = 0;\n  j = 1;\n  while (i < latestPosts.length) {\n    if (j < mergedPosts.length) {\n      mergedPosts.splice(j, 0, latestPosts[i]);\n      i++;\n      j += 2;\n    } else {\n      mergedPosts.push(latestPosts[i]);\n      i++;\n      j++;\n    }\n  }\n\n  return mergedPosts;\n};\n\n\nconst Feed = () => {\n  const navigation = useNavigation();\n  const [posts, setPosts] = useState([]);\n  const [lastVisiblePost, setLastVisiblePost] = useState(null);\n  const [hasMorePosts, setHasMorePosts] = useState(true);\n  const [errorMessage, setNetworkError] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const active = useSelector((state) => state.filter.filter);\n  const fetchedPostIds = useRef(new Set()); // Using a set to store the IDs of fetched posts\n  const scrollY = useRef(new Animated.Value(0)).current;\n  const headerThreshold = 100; // Threshold to trigger hiding/showing the search component\n\n  const fetchInitialPosts = async () => {\n    try {\n      setLoading(true);\n      console.log('Fetching initial posts...');\n\n      const userFilterPostsQuery = query(\n        collection(db, 'Posts'),\n        where('audience', '==', active),\n        orderBy(active === 'popular' ? 'likes' : 'createdAt', 'desc'),\n        limit(PAGE_SIZE)\n      );\n\n      const userFilterSnapshot = await getDocs(userFilterPostsQuery);\n      const userFilterPostsData = userFilterSnapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      const popularPostsQuery = query(\n        collection(db, 'Posts'),\n        where('audience', '==', 'popular'),\n        orderBy('likes', 'desc'),\n        orderBy('createdAt', 'desc'),\n        limit(PAGE_SIZE * 0.7)\n      );\n\n      const latestPostsQuery = query(\n        collection(db, 'Posts'),\n        where('audience', '==', 'latest'),\n        orderBy('createdAt', 'desc'),\n        limit(PAGE_SIZE * 0.3)\n      );\n\n      const popularSnapshot = await getDocs(popularPostsQuery);\n      const latestSnapshot = await getDocs(latestPostsQuery);\n\n      const popularPostsData = popularSnapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      const latestPostsData = latestSnapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      const mergedPostsData = mergePosts(\n        userFilterPostsData,\n        popularPostsData,\n        latestPostsData\n      );\n\n      if (mergedPostsData.length === 0) {\n        if (active !== 'all') {\n          setPosts([]);\n          setLastVisiblePost(null);\n          setHasMorePosts(true);\n          fetchedPostIds.current = new Set(); // Clear the fetched post IDs\n          fetchMorePosts();\n          return;\n        }\n\n        const alert = `Try again later`;\n        setNetworkError(alert);\n        setHasMorePosts(false);\n      } else {\n        setLastVisiblePost(mergedPostsData[mergedPostsData.length - 1]);\n        setHasMorePosts(true);\n      }\n\n      setPosts(mergedPostsData);\n      // Store the IDs of fetched posts in the set\n      mergedPostsData.forEach((post) => fetchedPostIds.current.add(post.id));\n    } catch (error) {\n      console.error('Firestore Network Error:', error.code, error.message);\n      const errorMessage = 'Please check your internet connection and try again!';\n      setNetworkError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMorePosts = async () => {\n    try {\n      if (!hasMorePosts) return;\n\n      setLoadingMore(true);\n      console.log('Fetching more posts...');\n\n      const userFilterPostsQuery = query(\n        collection(db, 'Posts'),\n        where('audience', '==', active),\n        orderBy(active === 'popular' ? 'likes' : 'createdAt', 'desc'),\n        startAfter(lastVisiblePost),\n        limit(PAGE_SIZE)\n      );\n\n      const userFilterSnapshot = await getDocs(userFilterPostsQuery);\n      const userFilterPostsData = userFilterSnapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      // Remove already fetched posts from the results\n      const uniquePostsData = userFilterPostsData.filter(\n        (post) => !fetchedPostIds.current.has(post.id)\n      );\n\n      // If all fetched posts are already in the list, there are no more posts to fetch\n      if (uniquePostsData.length === 0) {\n        setHasMorePosts(false);\n      } else {\n        uniquePostsData.forEach((post) => fetchedPostIds.current.add(post.id));\n        setLastVisiblePost(uniquePostsData[uniquePostsData.length - 1]);\n      }\n\n      setPosts((prevPosts) => [...prevPosts, ...uniquePostsData]);\n    } catch (error) {\n      console.error('Firestore Network Error:', error.code, error.message);\n      const errorMessage = 'Please check your internet connection and try again!';\n      setNetworkError(errorMessage);\n    } finally {\n      setLoadingMore(false);\n    }\n  };\n\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    await fetchInitialPosts();\n    setRefreshing(false);\n  };\n\n  const getItemCount = useCallback((data) => data.length, []);\n  const getItem = useCallback((data, index) => data[index], []);\n  const renderVirtualizedItem = useCallback(({ item }) => (\n    <Snippet post={item} postId={item.id} />\n  ), []);\n\n  const handleFetchMorePosts = () => {\n    if (!loadingMore && hasMorePosts) {\n      fetchMorePosts();\n    }\n  };\n\n  const ListHeaderComponent = () => {\n    return <Search />;\n  };\n\n  const ListFooterComponent = () => {\n    if (!hasMorePosts && posts.length > 0) {\n      return (\n        <View style={styles.noMorePosts}>\n          <Text>No more posts. Try changing the feed filter.</Text>\n        </View>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <View style={styles.feed}>\n      <Topnav screen={'feed'} />\n      <StatusBar barStyle={'dark-content'} backgroundColor={'#ffff'} />\n\n      <VirtualizedList\n        showsVerticalScrollIndicator={false}\n        data={posts}\n        renderItem={renderVirtualizedItem}\n        keyExtractor={(item) => item.id}\n        getItemCount={getItemCount}\n        getItem={getItem}\n        onEndReached={handleFetchMorePosts}\n        onEndReachedThreshold={0.5} \n        contentContainerStyle={styles.flatListContent}\n        ListHeaderComponent={ListHeaderComponent}\n        ListFooterComponent={ListFooterComponent}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      />\n\n      {loadingMore && (\n        <View style={styles.loadingMore}>\n          <ActivityIndicator size={'large'} color={'#2696b8'} />\n        </View>\n      )}\n\n      {loading && (\n        <View style={styles.loading}>\n          <ActivityIndicator size={'small'} color={'#2696b8'} />\n        </View>\n      )}\n\n\n\n      {errorMessage && <NetworkError message={errorMessage} />}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  feed: {\n    flex: 1,\n    // backgroundColor: '#fff',\n  },\n  flatListContent: {\n    // paddingBottom: 16,\n  },\n  loadingMore: {\n    alignSelf: 'center',\n    padding:5, \n    // backgroundColor: 'white',\n    marginVertical:2, width:width\n  },\n  loading: {\n    position: 'absolute',\n    top: height / 2 - 20,\n    left: width / 2 - 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  noMorePosts: {\n    alignSelf: 'center',\n    marginVertical: 8,\n  },\n});\n\nexport default Feed;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}