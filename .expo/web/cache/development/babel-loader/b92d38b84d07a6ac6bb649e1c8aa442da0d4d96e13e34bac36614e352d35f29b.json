{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { db } from \"../firebase/firebase\";\nimport { collection, where, orderBy, limit, getDocs, query } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UserTaggingTextInput = function UserTaggingTextInput(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    suggestions = _useState4[0],\n    setSuggestions = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tagList = _useState6[0],\n    setTagList = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    cursorPosition = _useState8[0],\n    setCursorPosition = _useState8[1];\n  useEffect(function () {\n    setTagList([]);\n    setInputText('');\n  }, [props.id]);\n  var handleTextInputChange = function handleTextInputChange(text) {\n    setInputText(text);\n    setCursorPosition(text.length);\n    var startIndex = text.lastIndexOf('@');\n    if (startIndex !== -1 && startIndex === text.length - 1) {\n      var q = text.substring(startIndex + 1);\n      console.log(q, 'is query');\n      var collectionRef = collection(db, 'userProfiles');\n      var queryRef = query(collectionRef, where('username', '>=', q), where('username', '<=', q + \"\\uF8FF\"), orderBy('username'), limit(10));\n      getDocs(queryRef).then(function (querySnapshot) {\n        var matches = querySnapshot.docs.map(function (doc) {\n          var _doc$data = doc.data(),\n            username = _doc$data.username,\n            profileImageUrl = _doc$data.profileImageUrl,\n            userId = _doc$data.userId;\n          return {\n            username: username,\n            profileImageUrl: profileImageUrl,\n            userId: userId\n          };\n        });\n        setSuggestions(matches);\n      }).catch(function (error) {\n        console.log('Error getting user profiles:', error);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  };\n  useEffect(function () {\n    props.onTagListChange(tagList);\n    props.onMessageChange(inputText);\n  }, [tagList, inputText, props]);\n  useEffect(function () {\n    handleTextInputChange(inputText);\n  }, [inputText]);\n  useEffect(function () {\n    handleTextInputChange('');\n  }, [props.id]);\n  var handleSuggestionPress = function handleSuggestionPress(userId) {\n    var matchedSuggestion = suggestions.find(function (suggestion) {\n      return suggestion.userId === userId;\n    });\n    var matchedText = \"\" + matchedSuggestion.username;\n    var remainingText = inputText.substring(cursorPosition);\n    var newText = \"\" + inputText.substring(0, cursorPosition) + matchedText + remainingText;\n    var newTag = {\n      userId: matchedSuggestion.userId,\n      username: matchedSuggestion.username\n    };\n    setTagList([].concat(_toConsumableArray(tagList), [newTag]));\n    setInputText(newText);\n    setSuggestions([]);\n  };\n  var renderSuggestion = function renderSuggestion(_ref) {\n    var item = _ref.item;\n    var defaultProfileImage = require(\"../assets/graduate.png\");\n    var profileImage = typeof item.profileImageUrl === 'string' ? {\n      uri: item.profileImageUrl\n    } : defaultProfileImage;\n    return _jsxs(TouchableOpacity, {\n      style: styles.renderContainer,\n      onPress: function onPress() {\n        return handleSuggestionPress(item.userId);\n      },\n      children: [_jsx(Image, {\n        source: profileImage,\n        style: styles.profileImage\n      }), _jsxs(Text, {\n        style: styles.name,\n        children: [item.username, \" \"]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Write your message here\",\n      onChangeText: handleTextInputChange,\n      value: inputText,\n      multiline: true,\n      maxLength: 500\n    }), suggestions.length > 0 && _jsx(FlatList, {\n      data: suggestions,\n      renderItem: renderSuggestion,\n      keyExtractor: function keyExtractor(item) {\n        return item.userId;\n      },\n      style: {\n        maxHeight: 150\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  renderContainer: {\n    flexDirection: 'row',\n    padding: 10,\n    borderBottomColor: '#f0f0f0',\n    borderBottomWidth: 1,\n    alignItems: 'center'\n  },\n  profileImage: {\n    width: 30,\n    height: 30,\n    borderRadius: 100\n  },\n  name: {\n    marginLeft: 10\n  },\n  textInput: {\n    marginLeft: 40,\n    marginRight: 10,\n    padding: 10,\n    zIndex: 1\n  },\n  taggedWord: {\n    color: '#2696b8'\n  }\n});\nexport default UserTaggingTextInput;","map":{"version":3,"names":["React","useState","useEffect","TextInput","View","Text","FlatList","Image","StyleSheet","TouchableOpacity","db","collection","where","orderBy","limit","getDocs","query","jsx","_jsx","jsxs","_jsxs","UserTaggingTextInput","props","_useState","_useState2","_slicedToArray","inputText","setInputText","_useState3","_useState4","suggestions","setSuggestions","_useState5","_useState6","tagList","setTagList","_useState7","_useState8","cursorPosition","setCursorPosition","id","handleTextInputChange","text","length","startIndex","lastIndexOf","q","substring","console","log","collectionRef","queryRef","then","querySnapshot","matches","docs","map","doc","_doc$data","data","username","profileImageUrl","userId","catch","error","onTagListChange","onMessageChange","handleSuggestionPress","matchedSuggestion","find","suggestion","matchedText","remainingText","newText","newTag","concat","_toConsumableArray","renderSuggestion","_ref","item","defaultProfileImage","require","profileImage","uri","style","styles","renderContainer","onPress","children","source","name","textInput","placeholder","onChangeText","value","multiline","maxLength","renderItem","keyExtractor","maxHeight","create","flexDirection","padding","borderBottomColor","borderBottomWidth","alignItems","width","height","borderRadius","marginLeft","marginRight","zIndex","taggedWord","color"],"sources":["/home/leo/Documents/Campus-Vibes-V1/mobile/components/TagModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextInput, View, Text, FlatList, Image, StyleSheet, TouchableOpacity} from 'react-native';\nimport { db } from '../firebase/firebase';\nimport { collection, where, orderBy, limit, getDocs, query} from 'firebase/firestore';\n\n\nconst UserTaggingTextInput = (props) => {\n  // console.log('ndbhsdhsdshvdygfd', props)\n  const [inputText, setInputText] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [tagList, setTagList] = useState([]);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  \n  useEffect(() => {\n    setTagList([]);\n    setInputText('');\n  }, [props.id]);\n\n  \n  const handleTextInputChange = (text) => {\n    setInputText(text);\n    setCursorPosition(text.length);\n    const startIndex = text.lastIndexOf('@');\n    if (startIndex !== -1 && startIndex === text.length - 1) {\n      const q = text.substring(startIndex + 1); // remove the '@' symbol\n      console.log(q, 'is query');\n      const collectionRef = collection(db, 'userProfiles');\n      const queryRef = query(\n        collectionRef,\n        where('username', '>=', q),\n        where('username', '<=', q + '\\uf8ff'),\n        orderBy('username'),\n        limit(10)\n      );\n      getDocs(queryRef)\n        .then((querySnapshot) => {\n          const matches = querySnapshot.docs.map((doc) => {\n            const { username, profileImageUrl, userId } = doc.data();\n            return { username, profileImageUrl, userId };\n          });\n          setSuggestions(matches);\n        })\n        .catch((error) => {\n          console.log('Error getting user profiles:', error);\n        });\n    } else {\n      setSuggestions([]);\n    }\n  };\n  \n  useEffect(() => {\n    props.onTagListChange(tagList);\n    props.onMessageChange(inputText);\n  }, [tagList, inputText, props]);\n  \n  useEffect(() => {\n    handleTextInputChange(inputText);\n  }, [inputText]);\n  \n  useEffect(() => {\n    handleTextInputChange('');\n  }, [props.id]);\n  \n\n  \nconst handleSuggestionPress = (userId) => {\n  const matchedSuggestion = suggestions.find((suggestion) => suggestion.userId === userId);\n  const matchedText = `${matchedSuggestion.username}`;\n  const remainingText = inputText.substring(cursorPosition);\n  const newText = `${inputText.substring(0, cursorPosition)}${matchedText}${remainingText}`;\n  const newTag = { userId: matchedSuggestion.userId, username: matchedSuggestion.username };\n  setTagList([...tagList, newTag]);\n  setInputText(newText);\n  setSuggestions([]);\n};\n\n\n  const renderSuggestion = ({ item }) => {\n    const defaultProfileImage = require('../assets/graduate.png')\n    const profileImage = typeof item.profileImageUrl === 'string' ? { uri: item.profileImageUrl } : defaultProfileImage;\n    return (\n      <TouchableOpacity style={styles.renderContainer}  onPress={() => handleSuggestionPress(item.userId)}>\n         <Image source={profileImage} style={styles.profileImage} />\n         <Text style={styles.name}>{item.username} </Text>\n      </TouchableOpacity>\n    );\n  };\n  \n  \n  return (\n    <View>\n      <TextInput\n        style={styles.textInput}\n        placeholder=\"Write your message here\"\n        onChangeText={handleTextInputChange}\n        value={inputText}\n        multiline\n        maxLength={500}\n      />\n      {suggestions.length > 0 && (\n        <FlatList\n          data={suggestions}\n          renderItem={renderSuggestion}\n          keyExtractor={(item) => item.userId}\n          style={{ maxHeight: 150 }}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n    renderContainer:{\n        flexDirection: 'row',\n        padding: 10,\n        borderBottomColor: '#f0f0f0', borderBottomWidth: 1,\n        alignItems: 'center'\n    },\n    profileImage: {\n        width: 30, height: 30,\n        borderRadius: 100,\n    },\n    name:{\n        marginLeft: 10,\n    },\n    textInput:{\n        marginLeft: 40,marginRight: 10,\n        padding: 10, zIndex: 1\n    },\n    taggedWord:{\n        color: '#2696b8'\n    }\n    \n});\nexport default UserTaggingTextInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}