{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport QuickModal from \"./QuickModal\";\nimport { db } from \"../firebase/firebase\";\nimport { collection } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar Search = function Search() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showModal = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    query = _useState4[0],\n    setQuery = _useState4[1];\n  var slideAnim = useState(new Animated.Value(width))[0];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showQuickResults = _useState6[0],\n    setShowQuickResults = _useState6[1];\n  var _useState7 = useState('all'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currentTab = _useState8[0],\n    setCurrentTab = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    searchResults = _useState10[0],\n    setSearchResults = _useState10[1];\n  var handleTextChange = function handleTextChange(text) {\n    setQuery(text);\n    if (text.length > 0) {\n      quickSearch();\n      setShowQuickResults(true);\n    } else {\n      setShowQuickResults(false);\n    }\n  };\n  var quickSearch = function quickSearch() {};\n  var handleTabPress = function handleTabPress(tabKey) {\n    setCurrentTab(tabKey);\n  };\n  var handleSearch = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (query.length > 0) {\n        setModalVisible(true);\n        setShowQuickResults(false);\n        Keyboard.dismiss();\n        try {\n          var batchSize = 10;\n          var lastPostDoc = null;\n          var lastUserDoc = null;\n          var postsResults = [];\n          var usersResults = [];\n          while (true) {\n            var queryRef = db.collection('Posts').orderBy('topic').startAfter(lastPostDoc).limit(batchSize);\n            if (lastPostDoc === null) {\n              queryRef = queryRef.where('topic', 'array-contains', query);\n            }\n            var querySnapshot = yield queryRef.get();\n            if (querySnapshot.empty) {\n              break;\n            }\n            lastPostDoc = querySnapshot.docs[querySnapshot.docs.length - 1];\n            var batchResults = querySnapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n            postsResults = postsResults.concat(batchResults);\n            if (querySnapshot.size < batchSize) {\n              break;\n            }\n          }\n          while (true) {\n            var _queryRef = db.collection('userProfiles').orderBy('username').startAfter(lastUserDoc).limit(batchSize);\n            if (lastUserDoc === null) {\n              _queryRef = _queryRef.where('username', 'array-contains', query);\n            }\n            var _querySnapshot = yield _queryRef.get();\n            if (_querySnapshot.empty) {\n              break;\n            }\n            lastUserDoc = _querySnapshot.docs[_querySnapshot.docs.length - 1];\n            var _batchResults = _querySnapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n            usersResults = usersResults.concat(_batchResults);\n            if (_querySnapshot.size < batchSize) {\n              break;\n            }\n          }\n          var _searchResults = [].concat(_toConsumableArray(postsResults), _toConsumableArray(usersResults));\n          setSearchResults(_searchResults);\n        } catch (error) {\n          console.error('Error searching:', error);\n        }\n      } else {\n        setShowQuickResults(false);\n        setModalVisible(true);\n      }\n    });\n    return function handleSearch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (showModal) {\n      Animated.timing(slideAnim, {\n        toValue: 0,\n        duration: 100,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(slideAnim, {\n        toValue: width,\n        duration: 100,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [showModal]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.holder,\n      children: [_jsxs(View, {\n        style: styles.searchBar,\n        children: [_jsx(TextInput, {\n          placeholder: \"Search\",\n          style: styles.searchInput,\n          value: query,\n          onChangeText: handleTextChange,\n          onSubmitEditing: handleSearch\n        }), _jsx(TouchableOpacity, {\n          onPress: handleSearch,\n          children: _jsx(MaterialIcons, {\n            name: \"search\",\n            size: 24,\n            color: query.length > 0 ? 'rgba(38, 150, 184, 0.5)' : 'rgba(38, 150, 184, 1)',\n            style: query.length > 0 ? styles.searchIconWithText : styles.searchIconWithoutText\n          })\n        })]\n      }), query.length > 2 && _jsx(QuickModal, {\n        q: query.toLowerCase(),\n        visible: showQuickResults\n      })]\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: showModal,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: _jsxs(Animated.View, {\n        style: [styles.modalContainer, {\n          transform: [{\n            translateX: slideAnim\n          }]\n        }],\n        children: [_jsx(View, {\n          style: styles.top,\n          children: _jsxs(View, {\n            style: styles.searchBar,\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setModalVisible(false);\n              },\n              children: _jsx(MaterialIcons, {\n                name: \"arrow-back\",\n                size: 24,\n                style: styles.back\n              })\n            }), _jsx(TextInput, {\n              placeholder: \"Search\",\n              style: styles.searchInput,\n              value: query,\n              onChangeText: handleTextChange,\n              onSubmitEditing: handleSearch\n            }), _jsx(TouchableOpacity, {\n              onPress: handleSearch,\n              children: _jsx(MaterialIcons, {\n                name: \"search\",\n                size: 24,\n                color: query.length > 0 ? 'rgba(38, 150, 184, 0.5)' : 'rgba(38, 150, 184, 1)',\n                style: query.length > 0 ? styles.searchIconWithText : styles.searchIconWithoutText\n              })\n            })]\n          })\n        }), _jsxs(View, {\n          style: styles.body,\n          children: [_jsxs(View, {\n            style: styles.tabContainer,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.tabItem, currentTab === 'all' && styles.activeTab],\n              onPress: function onPress() {\n                return handleTabPress('all');\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"All\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.tabItem, currentTab === 'users' && styles.activeTab],\n              onPress: function onPress() {\n                return handleTabPress('users');\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Users\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.tabItem, currentTab === 'media' && styles.activeTab],\n              onPress: function onPress() {\n                return handleTabPress('media');\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Media\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.tabItem, currentTab === 'services' && styles.activeTab],\n              onPress: function onPress() {\n                return handleTabPress('services');\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Services\"\n              })\n            })]\n          }), query.length === 0 && _jsx(Text, {\n            style: styles.placeholder,\n            children: \"Enter keywords to search content\"\n          })]\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  searchBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    height: 50,\n    backgroundColor: '#fafafa',\n    marginBottom: 2\n  },\n  holder: {\n    backgroundColor: '#f8f8f8'\n  },\n  searchIconWithText: {\n    color: 'white',\n    padding: 5,\n    backgroundColor: 'rgba(38,150,182, 0.5)',\n    borderRadius: 10,\n    marginHorizontal: 5,\n    borderBottomColor: '#2696b8',\n    borderBottomWidth: 2\n  },\n  searchIconWithoutText: {\n    color: '#2696b8',\n    borderBottomWidth: 1.5,\n    borderRadius: 10,\n    borderBottomColor: '#2696b8',\n    marginHorizontal: 5,\n    padding: 5,\n    elevation: 2,\n    backgroundColor: 'white'\n  },\n  searchInput: {\n    flex: 1,\n    borderRadius: 10,\n    padding: 5,\n    elevation: 2,\n    backgroundColor: 'white'\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  QuickModal: {\n    width: '90%',\n    height: 60,\n    position: 'absolute',\n    bottom: 0\n  },\n  tabContainer: {\n    marginBottom: 2,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0'\n  },\n  tabItem: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  activeTab: {\n    borderBottomColor: '#2696b8',\n    borderBottomWidth: 2\n  },\n  tabText: {\n    color: 'black'\n  },\n  top: {\n    marginVertical: 10,\n    marginRight: 5\n  },\n  back: {\n    marginRight: 5,\n    padding: 5\n  },\n  placeholder: {\n    position: 'absolute',\n    alignSelf: 'center',\n    top: height * 0.5\n  }\n});\nexport default Search;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","TouchableOpacity","Modal","Text","Animated","Dimensions","Keyboard","StyleSheet","MaterialIcons","QuickModal","db","collection","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","Search","_useState","_useState2","_slicedToArray","showModal","setModalVisible","_useState3","_useState4","query","setQuery","slideAnim","Value","_useState5","_useState6","showQuickResults","setShowQuickResults","_useState7","_useState8","currentTab","setCurrentTab","_useState9","_useState10","searchResults","setSearchResults","handleTextChange","text","length","quickSearch","handleTabPress","tabKey","handleSearch","_ref","_asyncToGenerator","dismiss","batchSize","lastPostDoc","lastUserDoc","postsResults","usersResults","queryRef","orderBy","startAfter","limit","where","querySnapshot","empty","docs","batchResults","map","doc","data","concat","size","_toConsumableArray","error","console","apply","arguments","timing","toValue","duration","useNativeDriver","start","style","styles","container","children","holder","searchBar","placeholder","searchInput","value","onChangeText","onSubmitEditing","onPress","name","color","searchIconWithText","searchIconWithoutText","q","toLowerCase","visible","animationType","transparent","onRequestClose","modalContainer","transform","translateX","top","back","body","tabContainer","tabItem","activeTab","create","flex","backgroundColor","flexDirection","alignItems","paddingHorizontal","marginBottom","padding","borderRadius","marginHorizontal","borderBottomColor","borderBottomWidth","elevation","position","bottom","justifyContent","paddingBottom","tabText","marginVertical","marginRight","alignSelf"],"sources":["C:/Users/Alus/Downloads/Campus-Vibes-V1-main/Campus-Vibes-V1-main/mobile/components/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, TextInput, TouchableOpacity, Modal, Text, Animated, Dimensions, Keyboard, StyleSheet} from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport QuickModal from './QuickModal';\nimport { db } from '../firebase/firebase';\nimport { collection, } from 'firebase/firestore';\n\nconst { width, height} = Dimensions.get('window');\n\nconst Search = () => {\n  const [showModal, setModalVisible] = useState(false);\n  const [query, setQuery] = useState('');\n  const slideAnim = useState(new Animated.Value(width))[0];\n  const [showQuickResults, setShowQuickResults] = useState(false);\n  const [currentTab, setCurrentTab] = useState('all')\n  const [searchResults, setSearchResults] = useState([])\n \n  \n\n  const handleTextChange = (text) => {\n    setQuery(text);\n    if (text.length > 0) {\n      quickSearch();\n      setShowQuickResults(true);\n    } else {\n      setShowQuickResults(false);\n    }\n  };\n\n    // QuickSearch\n    const quickSearch = () => {\n      // Perform the quick search logic here\n      // Update the quick search results based on the query\n      // Set the quick search results in state or take any necessary action\n    };\n\n    // Search Modal\n    const handleTabPress = (tabKey) => {\n      setCurrentTab(tabKey);\n    };\n\n    const handleSearch = async () => {\n      if (query.length > 0) {\n        // Perform search or filter logic here based on the query value\n        setModalVisible(true);\n        setShowQuickResults(false);\n        Keyboard.dismiss();\n    \n        try {\n          const batchSize = 10; // Number of results to fetch in each batch\n          let lastPostDoc = null; // Reference to the last document from the previous batch\n          let lastUserDoc = null; // Reference to the last document from the previous batch\n          let postsResults = []; // Array to store the search results for Posts collection\n          let usersResults = []; // Array to store the search results for userProfiles collection\n    \n          // Search in Posts collection\n          while (true) {\n            let queryRef = db\n              .collection('Posts')\n              .orderBy('topic')\n              .startAfter(lastPostDoc)\n              .limit(batchSize);\n    \n            if (lastPostDoc === null) {\n              queryRef = queryRef.where('topic', 'array-contains', query);\n            }\n    \n            const querySnapshot = await queryRef.get();\n    \n            if (querySnapshot.empty) {\n              break; // No more results to fetch\n            }\n    \n            lastPostDoc = querySnapshot.docs[querySnapshot.docs.length - 1];\n            const batchResults = querySnapshot.docs.map((doc) => doc.data());\n            postsResults = postsResults.concat(batchResults);\n    \n            if (querySnapshot.size < batchSize) {\n              break; // Reached the end of the results\n            }\n          }\n    \n          // Search in userProfiles collection\n          while (true) {\n            let queryRef = db\n              .collection('userProfiles')\n              .orderBy('username')\n              .startAfter(lastUserDoc)\n              .limit(batchSize);\n    \n            if (lastUserDoc === null) {\n              queryRef = queryRef.where('username', 'array-contains', query);\n            }\n    \n            const querySnapshot = await queryRef.get();\n    \n            if (querySnapshot.empty) {\n              break; // No more results to fetch\n            }\n    \n            lastUserDoc = querySnapshot.docs[querySnapshot.docs.length - 1];\n            const batchResults = querySnapshot.docs.map((doc) => doc.data());\n            usersResults = usersResults.concat(batchResults);\n    \n            if (querySnapshot.size < batchSize) {\n              break; // Reached the end of the results\n            }\n          }\n    \n          // Combine the search results\n          const searchResults = [...postsResults, ...usersResults];\n    \n          // Set the search results in state\n          setSearchResults(searchResults);\n        } catch (error) {\n          console.error('Error searching:', error);\n          // Handle the error\n        }\n      } else {\n        // Just display the search page\n        setShowQuickResults(false);\n        setModalVisible(true);\n      }\n    };\n    \n    \n\n  useEffect(() => {\n    if (showModal) {\n      Animated.timing(slideAnim, { toValue: 0, duration: 100, useNativeDriver: true }).start();\n    } else {\n      Animated.timing(slideAnim, { toValue: width, duration: 100, useNativeDriver: true }).start();\n    }\n  }, [showModal]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.holder}>\n      <View style={styles.searchBar}>\n\n        <TextInput\n          placeholder=\"Search\"\n          style={styles.searchInput}\n          value={query}\n          onChangeText={handleTextChange}\n          onSubmitEditing={handleSearch}\n        />\n\n        <TouchableOpacity onPress={handleSearch}>\n         <MaterialIcons\n           name='search'\n           size={24}\n           color={query.length > 0 ? 'rgba(38, 150, 184, 0.5)' : 'rgba(38, 150, 184, 1)'}\n           style={query.length > 0 ? styles.searchIconWithText : styles.searchIconWithoutText}\n          />\n        </TouchableOpacity>\n      </View>\n      {query.length > 2 && (\n           <QuickModal q={query.toLowerCase()} visible={showQuickResults}/>\n        )}\n      </View>\n   \n      <Modal animationType=\"slide\" transparent visible={showModal} onRequestClose={() => setModalVisible(false)} >\n        <Animated.View style={[styles.modalContainer, { transform: [{ translateX: slideAnim }] }]}>\n          <View style={styles.top}>\n           <View style={styles.searchBar}>\n            <TouchableOpacity onPress={() => setModalVisible(false)}>\n              <MaterialIcons name='arrow-back' size={24} style={styles.back}/>\n            </TouchableOpacity>\n             <TextInput\n               placeholder=\"Search\"\n               style={styles.searchInput}\n               value={query}\n               onChangeText={handleTextChange}\n               onSubmitEditing={handleSearch}\n             />\n\n             <TouchableOpacity onPress={handleSearch}>\n               <MaterialIcons\n                 name='search'\n                 size={24}\n                 color={query.length > 0 ? 'rgba(38, 150, 184, 0.5)' : 'rgba(38, 150, 184, 1)'}\n                 style={query.length > 0 ? styles.searchIconWithText : styles.searchIconWithoutText}\n                />\n              </TouchableOpacity>\n           </View>\n          </View>\n\n          <View style={styles.body}>\n              <View style={styles.tabContainer}>\n                <TouchableOpacity\n                  style={[styles.tabItem, currentTab === 'all' && styles.activeTab]}\n                  onPress={() => handleTabPress('all')}\n                >\n                  <Text style={styles.text}>All</Text>\n                </TouchableOpacity>\n  \n                <TouchableOpacity\n                  style={[styles.tabItem, currentTab === 'users' && styles.activeTab]}\n                  onPress={() => handleTabPress('users')}\n                >\n                  <Text style={styles.text}>Users</Text>\n                </TouchableOpacity>\n  \n                <TouchableOpacity\n                  style={[styles.tabItem, currentTab === 'media' && styles.activeTab]}\n                  onPress={() => handleTabPress('media')}\n                >\n                  <Text style={styles.text}>Media</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={[styles.tabItem, currentTab === 'services' && styles.activeTab]}\n                  onPress={() => handleTabPress('services')}\n                >\n                  <Text style={styles.text}>Services</Text>\n                </TouchableOpacity>\n              </View>\n              {query.length === 0 &&(\n             <Text style={styles.placeholder}>\n              Enter keywords to search content\n             </Text>\n             )}\n             \n            </View>\n        </Animated.View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  searchBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    height: 50,\n    backgroundColor: '#fafafa', marginBottom:2\n  },\n  holder:{\n    backgroundColor: '#f8f8f8'\n  },\n  searchIconWithText:{\n    color: 'white', padding: 5, \n    backgroundColor: 'rgba(38,150,182, 0.5)',\n    borderRadius: 10, \n    marginHorizontal:5,\n    borderBottomColor: '#2696b8', borderBottomWidth: 2\n  },\n  searchIconWithoutText:{\n    color: '#2696b8',\n    borderBottomWidth:1.5,\n    borderRadius:10, borderBottomColor: '#2696b8',\n    marginHorizontal:5,\n    padding:5, elevation:2, backgroundColor:'white'\n  },\n  searchInput: {\n    flex: 1,\n    borderRadius:10,\n    padding:5,\n    elevation: 2,\n    backgroundColor: 'white'\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  QuickModal:{\n    width: '90%', height: 60, position: 'absolute', bottom: 0, \n  },\n\n  tabContainer: {\n    marginBottom: 2,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 1, borderBottomColor: '#f0f0f0'\n  },\n  tabItem: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5,\n  },\n  activeTab: {\n    borderBottomColor: '#2696b8',\n    borderBottomWidth: 2\n  },\n  tabText: {\n    color: 'black',\n  },\n\n  top:{\n    marginVertical: 10,\n    marginRight:5\n  },\n  back:{\n    marginRight:5, padding: 5\n  },\n  placeholder:{\n    position: 'absolute', alignSelf: 'center',\n    top: height * 0.5,\n  }\n});\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}