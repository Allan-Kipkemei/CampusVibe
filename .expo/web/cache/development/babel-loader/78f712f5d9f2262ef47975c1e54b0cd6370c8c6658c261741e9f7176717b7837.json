{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Topnav from \"../components/Topnav\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Inbox = function Inbox() {\n  var _useState = useState('Chats'),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  var handleTabChange = function handleTabChange(tab) {\n    setActiveTab(tab);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Topnav, {}), _jsxs(View, {\n      style: styles.tabs,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.tab, activeTab === 'Chats' && styles.activeTab],\n        onPress: function onPress() {\n          return handleTabChange('Chats');\n        },\n        children: _jsx(Text, {\n          style: [styles.tabText, activeTab === 'Chats' && styles.activeTabText],\n          children: \"Chats\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.tab, activeTab === 'Notifications' && styles.activeTab],\n        onPress: function onPress() {\n          return handleTabChange('Notifications');\n        },\n        children: _jsx(Text, {\n          style: [styles.tabText, activeTab === 'Notifications' && styles.activeTabText],\n          children: \"Notifications\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.content,\n      children: activeTab === 'Chats' ? _jsx(Text, {\n        style: styles.contentText,\n        children: \"Chats content goes here.\"\n      }) : _jsx(Text, {\n        style: styles.contentText,\n        children: \"Notifications content goes here.\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2'\n  },\n  tabs: {\n    flexDirection: 'row',\n    backgroundColor: '#ffff'\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 5,\n    alignItems: 'center'\n  },\n  tabText: {},\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#2696b8'\n  },\n  activeTabText: {\n    fontWeight: '500'\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  contentText: {\n    fontSize: 20,\n    color: '#333'\n  }\n});\nexport default Inbox;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","Topnav","jsx","_jsx","jsxs","_jsxs","Inbox","_useState","_useState2","_slicedToArray","activeTab","setActiveTab","handleTabChange","tab","style","styles","container","children","tabs","onPress","tabText","activeTabText","content","contentText","create","flex","backgroundColor","flexDirection","paddingVertical","alignItems","borderBottomWidth","borderBottomColor","fontWeight","justifyContent","padding","fontSize","color"],"sources":["C:/Users/Alus/Downloads/Campus-Vibes-V1-main/Campus-Vibes-V1-main/mobile/screens/Inbox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Topnav from '../components/Topnav';\n\nconst Inbox = () => {\n  const [activeTab, setActiveTab] = useState('Chats');\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n  \n  return (\n    <View style={styles.container}>\n      <Topnav />\n      <View style={styles.tabs}>\n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'Chats' && styles.activeTab]}\n          onPress={() => handleTabChange('Chats')}\n        >\n          <Text style={[styles.tabText, activeTab === 'Chats' && styles.activeTabText]}>Chats</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'Notifications' && styles.activeTab]}\n          onPress={() => handleTabChange('Notifications')}\n        >\n          <Text style={[styles.tabText, activeTab === 'Notifications' && styles.activeTabText]}>Notifications</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.content}>\n        {/* Render content based on the active tab */}\n        {activeTab === 'Chats' ? (\n          <Text style={styles.contentText}>Chats content goes here.</Text>\n        ) : (\n          <Text style={styles.contentText}>Notifications content goes here.</Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2',\n  },\n  tabs: {\n    flexDirection: 'row',\n    backgroundColor: '#ffff',\n    // borderWidth:1\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 5,\n    alignItems: 'center',\n  },\n  tabText: {\n    // fontSize: 18,\n    // color: '#fff',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#2696b8',\n  },\n  activeTabText: {\n    fontWeight: '500',\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  contentText: {\n    fontSize: 20,\n    color: '#333',\n  },\n});\n\nexport default Inbox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}